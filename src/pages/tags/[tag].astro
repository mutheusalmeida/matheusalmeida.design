---
import ArticlesList from '@/components/ArticlesList.astro'
import { slugfy } from '@/js/utils'
import TagsLayout from '@/layouts/TagsLayout.astro'
import { getCollection, type CollectionEntry } from 'astro:content'

type Props = {
  articles: CollectionEntry<'articles'>[]
  translatedTag: string
  tag: string
}

export async function getStaticPaths() {
  const articles = await getCollection(
    'articles',
    ({ id, data }) => id.startsWith('en/') && !data.draft
  )

  const tags = [...new Set(articles.map((article) => article.data.tag))]

  const paths = tags.map((tag) => {
    const filteredArticles = articles.filter(
      (article) => article.data.tag === tag
    )

    return {
      params: { tag: slugfy(tag.toLowerCase()) },
      props: {
        articles: filteredArticles,
        tag,
        translatedTag: slugfy(
          filteredArticles[0].data.translatedTag.toLowerCase()
        ),
      },
    }
  })

  return paths
}

const { articles, translatedTag, tag } = Astro.props
---

<TagsLayout tag={tag}>
  <ArticlesList data={articles} />
</TagsLayout>

<script define:vars={{ translatedTag }}>
  const ptSwitcher = document.querySelector('[data-lang="pt-switcher"]')
  ptSwitcher.setAttribute('href', `/pt-br/tags/${translatedTag}`)
</script>
